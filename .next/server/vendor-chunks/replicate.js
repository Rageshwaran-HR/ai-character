/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/replicate";
exports.ids = ["vendor-chunks/replicate"];
exports.modules = {

/***/ "(rsc)/./node_modules/replicate/index.js":
/*!*****************************************!*\
  !*** ./node_modules/replicate/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ApiError = __webpack_require__(/*! ./lib/error */ \"(rsc)/./node_modules/replicate/lib/error.js\");\nconst { withAutomaticRetries } = __webpack_require__(/*! ./lib/util */ \"(rsc)/./node_modules/replicate/lib/util.js\");\n\nconst collections = __webpack_require__(/*! ./lib/collections */ \"(rsc)/./node_modules/replicate/lib/collections.js\");\nconst deployments = __webpack_require__(/*! ./lib/deployments */ \"(rsc)/./node_modules/replicate/lib/deployments.js\");\nconst models = __webpack_require__(/*! ./lib/models */ \"(rsc)/./node_modules/replicate/lib/models.js\");\nconst predictions = __webpack_require__(/*! ./lib/predictions */ \"(rsc)/./node_modules/replicate/lib/predictions.js\");\nconst trainings = __webpack_require__(/*! ./lib/trainings */ \"(rsc)/./node_modules/replicate/lib/trainings.js\");\n\nconst packageJSON = __webpack_require__(/*! ./package.json */ \"(rsc)/./node_modules/replicate/package.json\");\n\n/**\n * Replicate API client library\n *\n * @see https://replicate.com/docs/reference/http\n * @example\n * // Create a new Replicate API client instance\n * const Replicate = require(\"replicate\");\n * const replicate = new Replicate({\n *     // get your token from https://replicate.com/account\n *     auth: process.env.REPLICATE_API_TOKEN,\n *     userAgent: \"my-app/1.2.3\"\n * });\n *\n * // Run a model and await the result:\n * const model = 'owner/model:version-id'\n * const input = {text: 'Hello, world!'}\n * const output = await replicate.run(model, { input });\n */\nclass Replicate {\n  /**\n   * Create a new Replicate API client instance.\n   *\n   * @param {object} options - Configuration options for the client\n   * @param {string} options.auth - Required. API access token\n   * @param {string} options.userAgent - Identifier of your app\n   * @param {string} [options.baseUrl] - Defaults to https://api.replicate.com/v1\n   * @param {Function} [options.fetch] - Fetch function to use. Defaults to `globalThis.fetch`\n   */\n  constructor(options = {}) {\n    this.auth = options.auth;\n    this.userAgent =\n      options.userAgent || `replicate-javascript/${packageJSON.version}`;\n    this.baseUrl = options.baseUrl || 'https://api.replicate.com/v1';\n    this.fetch = options.fetch || globalThis.fetch;\n\n    this.collections = {\n      list: collections.list.bind(this),\n      get: collections.get.bind(this),\n    };\n\n    this.models = {\n      get: models.get.bind(this),\n      versions: {\n        list: models.versions.list.bind(this),\n        get: models.versions.get.bind(this),\n      },\n    };\n\n    this.predictions = {\n      create: predictions.create.bind(this),\n      get: predictions.get.bind(this),\n      cancel: predictions.cancel.bind(this),\n      list: predictions.list.bind(this),\n    };\n\n    this.trainings = {\n      create: trainings.create.bind(this),\n      get: trainings.get.bind(this),\n      cancel: trainings.cancel.bind(this),\n      list: trainings.list.bind(this),\n    };\n\n    this.deployments = {\n      predictions: {\n        create: deployments.predictions.create.bind(this),\n      }\n    };\n  }\n\n  /**\n   * Run a model and wait for its output.\n   *\n   * @param {string} identifier - Required. The model version identifier in the format \"{owner}/{name}:{version}\"\n   * @param {object} options\n   * @param {object} options.input - Required. An object with the model inputs\n   * @param {object} [options.wait] - Options for waiting for the prediction to finish\n   * @param {number} [options.wait.interval] - Polling interval in milliseconds. Defaults to 500\n   * @param {string} [options.webhook] - An HTTPS URL for receiving a webhook when the prediction has new output\n   * @param {string[]} [options.webhook_events_filter] - You can change which events trigger webhook requests by specifying webhook events (`start`|`output`|`logs`|`completed`)\n   * @param {AbortSignal} [options.signal] - AbortSignal to cancel the prediction\n   * @param {Function} [progress] - Callback function that receives the prediction object as it's updated. The function is called when the prediction is created, each time its updated while polling for completion, and when it's completed.\n   * @throws {Error} If the prediction failed\n   * @returns {Promise<object>} - Resolves with the output of running the model\n   */\n  async run(identifier, options, progress) {\n    const { wait, ...data } = options;\n\n    // Define a pattern for owner and model names that allows\n    // letters, digits, and certain special characters.\n    // Example: \"user123\", \"abc__123\", \"user.name\"\n    const namePattern = /[a-zA-Z0-9]+(?:(?:[._]|__|[-]*)[a-zA-Z0-9]+)*/;\n\n    // Define a pattern for \"owner/name:version\" format with named capturing groups.\n    // Example: \"user123/repo_a:1a2b3c\"\n    const pattern = new RegExp(\n      `^(?<owner>${namePattern.source})/(?<name>${namePattern.source}):(?<version>[0-9a-fA-F]+)$`\n    );\n\n    const match = identifier.match(pattern);\n    if (!match || !match.groups) {\n      throw new Error(\n        'Invalid version. It must be in the format \"owner/name:version\"'\n      );\n    }\n\n    const { version } = match.groups;\n\n    let prediction = await this.predictions.create({\n      ...data,\n      version,\n    });\n\n    // Call progress callback with the initial prediction object\n    if (progress) {\n      progress(prediction);\n    }\n\n    const { signal } = options;\n\n    prediction = await this.wait(prediction, wait || {}, async (updatedPrediction) => {\n      // Call progress callback with the updated prediction object\n      if (progress) {\n        progress(updatedPrediction);\n      }\n\n      if (signal && signal.aborted) {\n        await this.predictions.cancel(updatedPrediction.id);\n        return true; // stop polling\n      }\n\n      return false; // continue polling\n    });\n\n    // Call progress callback with the completed prediction object\n    if (progress) {\n      progress(prediction);\n    }\n\n    if (prediction.status === 'failed') {\n      throw new Error(`Prediction failed: ${prediction.error}`);\n    }\n\n    return prediction.output;\n  }\n\n  /**\n   * Make a request to the Replicate API.\n   *\n   * @param {string} route - REST API endpoint path\n   * @param {object} options - Request parameters\n   * @param {string} [options.method] - HTTP method. Defaults to GET\n   * @param {object} [options.params] - Query parameters\n   * @param {object|Headers} [options.headers] - HTTP headers\n   * @param {object} [options.data] - Body parameters\n   * @returns {Promise<Response>} - Resolves with the response object\n   * @throws {ApiError} If the request failed\n   */\n  async request(route, options) {\n    const { auth, baseUrl, userAgent } = this;\n\n    let url;\n    if (route instanceof URL) {\n      url = route;\n    } else {\n      url = new URL(\n        route.startsWith('/') ? route.slice(1) : route,\n        baseUrl.endsWith('/') ? baseUrl : `${baseUrl}/`\n      );\n    }\n\n    const {\n      method = 'GET',\n      params = {},\n      data,\n    } = options;\n\n    Object.entries(params).forEach(([key, value]) => {\n      url.searchParams.append(key, value);\n    });\n\n    const headers = new Headers();\n    if (auth) {\n      headers.append('Authorization', `Token ${auth}`);\n    }\n    headers.append('Content-Type', 'application/json');\n    headers.append('User-Agent', userAgent);\n    if (options.headers) {\n      options.headers.forEach((value, key) => {\n        headers.append(key, value);\n      });\n    }\n\n    const init = {\n      method,\n      headers,\n      body: data ? JSON.stringify(data) : undefined,\n    };\n\n    const shouldRetry = method === 'GET' ?\n      (response) => (response.status === 429 || response.status >= 500) :\n      (response) => (response.status === 429);\n    const response = await withAutomaticRetries(async () => this.fetch(url, init), { shouldRetry });\n\n    if (!response.ok) {\n      const request = new Request(url, init);\n      const responseText = await response.text();\n      throw new ApiError(\n        `Request to ${url} failed with status ${response.status} ${response.statusText}: ${responseText}.`,\n        request,\n        response,\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Paginate through a list of results.\n   *\n   * @generator\n   * @example\n   * for await (const page of replicate.paginate(replicate.predictions.list) {\n   *    console.log(page);\n   * }\n   * @param {Function} endpoint - Function that returns a promise for the next page of results\n   * @yields {object[]} Each page of results\n   */\n  async * paginate(endpoint) {\n    const response = await endpoint();\n    yield response.results;\n    if (response.next) {\n      const nextPage = () => this.request(response.next, { method: 'GET' }).then((r) => r.json());\n      yield* this.paginate(nextPage);\n    }\n  }\n\n  /**\n   * Wait for a prediction to finish.\n   *\n   * If the prediction has already finished,\n   * this function returns immediately.\n   * Otherwise, it polls the API until the prediction finishes.\n   *\n   * @async\n   * @param {object} prediction - Prediction object\n   * @param {object} options - Options\n   * @param {number} [options.interval] - Polling interval in milliseconds. Defaults to 500\n   * @param {Function} [stop] - Async callback function that is called after each polling attempt. Receives the prediction object as an argument. Return false to cancel polling.\n   * @throws {Error} If the prediction doesn't complete within the maximum number of attempts\n   * @throws {Error} If the prediction failed\n   * @returns {Promise<object>} Resolves with the completed prediction object\n   */\n  async wait(prediction, options, stop) {\n    const { id } = prediction;\n    if (!id) {\n      throw new Error('Invalid prediction');\n    }\n\n    if (\n      prediction.status === 'succeeded' ||\n      prediction.status === 'failed' ||\n      prediction.status === 'canceled'\n    ) {\n      return prediction;\n    }\n\n    // eslint-disable-next-line no-promise-executor-return\n    const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n    const interval = (options && options.interval) || 500;\n\n    let updatedPrediction = await this.predictions.get(id);\n\n    while (\n      updatedPrediction.status !== 'succeeded' &&\n      updatedPrediction.status !== 'failed' &&\n      updatedPrediction.status !== 'canceled'\n    ) {\n      /* eslint-disable no-await-in-loop */\n      if (stop && await stop(updatedPrediction) === true) {\n        break;\n      }\n\n      await sleep(interval);\n      updatedPrediction = await this.predictions.get(prediction.id);\n      /* eslint-enable no-await-in-loop */\n    }\n\n    if (updatedPrediction.status === 'failed') {\n      throw new Error(`Prediction failed: ${updatedPrediction.error}`);\n    }\n\n    return updatedPrediction;\n  }\n}\n\nmodule.exports = Replicate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVwbGljYXRlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLGdFQUFhO0FBQ3RDLFFBQVEsdUJBQXVCLEVBQUUsbUJBQU8sQ0FBQyw4REFBWTs7QUFFckQsb0JBQW9CLG1CQUFPLENBQUMsNEVBQW1CO0FBQy9DLG9CQUFvQixtQkFBTyxDQUFDLDRFQUFtQjtBQUMvQyxlQUFlLG1CQUFPLENBQUMsa0VBQWM7QUFDckMsb0JBQW9CLG1CQUFPLENBQUMsNEVBQW1CO0FBQy9DLGtCQUFrQixtQkFBTyxDQUFDLHdFQUFpQjs7QUFFM0Msb0JBQW9CLG1CQUFPLENBQUMsbUVBQWdCOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiwrQ0FBK0MsT0FBTztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsVUFBVTtBQUN2QjtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0EsbURBQW1ELG9CQUFvQjtBQUN2RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRLG9FQUFvRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFFBQVE7QUFDaEgsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFVBQVU7QUFDdkIsYUFBYSxhQUFhO0FBQzFCLGFBQWEsVUFBVTtBQUN2QixjQUFjLE9BQU87QUFDckIsZUFBZSxpQkFBaUI7QUFDaEM7QUFDQTtBQUNBLFlBQVksZ0JBQWdCOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsbUJBQW1CLFlBQVksbUJBQW1CO0FBQ3JFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxZQUFZLFVBQVU7O0FBRXRCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsWUFBWSxTQUFTOztBQUVyQix1REFBdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjs7QUFFQSxvQkFBb0I7QUFDcEIsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRDQUE0QyxpQkFBaUI7QUFDN0Q7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFFBQVE7QUFDckIsYUFBYSxnQkFBZ0I7QUFDN0IsYUFBYSxRQUFRO0FBQ3JCLGVBQWUsbUJBQW1CO0FBQ2xDLGNBQWMsVUFBVTtBQUN4QjtBQUNBO0FBQ0EsWUFBWSwyQkFBMkI7O0FBRXZDO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsNkNBQTZDLFFBQVE7QUFDckQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsTUFBTTs7QUFFTjtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsK0NBQStDLEtBQUs7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EscUZBQXFGLGFBQWE7O0FBRWxHO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLEtBQUsscUJBQXFCLGlCQUFpQixFQUFFLG9CQUFvQixJQUFJLGFBQWE7QUFDeEc7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxVQUFVO0FBQ3ZCLGNBQWMsVUFBVTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGVBQWU7QUFDMUU7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLFVBQVU7QUFDdkIsY0FBYyxPQUFPO0FBQ3JCLGNBQWMsT0FBTztBQUNyQixlQUFlLGlCQUFpQjtBQUNoQztBQUNBO0FBQ0EsWUFBWSxLQUFLO0FBQ2pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDRDQUE0Qyx3QkFBd0I7QUFDcEU7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktY29tcGFuaW9uLy4vbm9kZV9tb2R1bGVzL3JlcGxpY2F0ZS9pbmRleC5qcz9lNGNhIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEFwaUVycm9yID0gcmVxdWlyZSgnLi9saWIvZXJyb3InKTtcbmNvbnN0IHsgd2l0aEF1dG9tYXRpY1JldHJpZXMgfSA9IHJlcXVpcmUoJy4vbGliL3V0aWwnKTtcblxuY29uc3QgY29sbGVjdGlvbnMgPSByZXF1aXJlKCcuL2xpYi9jb2xsZWN0aW9ucycpO1xuY29uc3QgZGVwbG95bWVudHMgPSByZXF1aXJlKCcuL2xpYi9kZXBsb3ltZW50cycpO1xuY29uc3QgbW9kZWxzID0gcmVxdWlyZSgnLi9saWIvbW9kZWxzJyk7XG5jb25zdCBwcmVkaWN0aW9ucyA9IHJlcXVpcmUoJy4vbGliL3ByZWRpY3Rpb25zJyk7XG5jb25zdCB0cmFpbmluZ3MgPSByZXF1aXJlKCcuL2xpYi90cmFpbmluZ3MnKTtcblxuY29uc3QgcGFja2FnZUpTT04gPSByZXF1aXJlKCcuL3BhY2thZ2UuanNvbicpO1xuXG4vKipcbiAqIFJlcGxpY2F0ZSBBUEkgY2xpZW50IGxpYnJhcnlcbiAqXG4gKiBAc2VlIGh0dHBzOi8vcmVwbGljYXRlLmNvbS9kb2NzL3JlZmVyZW5jZS9odHRwXG4gKiBAZXhhbXBsZVxuICogLy8gQ3JlYXRlIGEgbmV3IFJlcGxpY2F0ZSBBUEkgY2xpZW50IGluc3RhbmNlXG4gKiBjb25zdCBSZXBsaWNhdGUgPSByZXF1aXJlKFwicmVwbGljYXRlXCIpO1xuICogY29uc3QgcmVwbGljYXRlID0gbmV3IFJlcGxpY2F0ZSh7XG4gKiAgICAgLy8gZ2V0IHlvdXIgdG9rZW4gZnJvbSBodHRwczovL3JlcGxpY2F0ZS5jb20vYWNjb3VudFxuICogICAgIGF1dGg6IHByb2Nlc3MuZW52LlJFUExJQ0FURV9BUElfVE9LRU4sXG4gKiAgICAgdXNlckFnZW50OiBcIm15LWFwcC8xLjIuM1wiXG4gKiB9KTtcbiAqXG4gKiAvLyBSdW4gYSBtb2RlbCBhbmQgYXdhaXQgdGhlIHJlc3VsdDpcbiAqIGNvbnN0IG1vZGVsID0gJ293bmVyL21vZGVsOnZlcnNpb24taWQnXG4gKiBjb25zdCBpbnB1dCA9IHt0ZXh0OiAnSGVsbG8sIHdvcmxkISd9XG4gKiBjb25zdCBvdXRwdXQgPSBhd2FpdCByZXBsaWNhdGUucnVuKG1vZGVsLCB7IGlucHV0IH0pO1xuICovXG5jbGFzcyBSZXBsaWNhdGUge1xuICAvKipcbiAgICogQ3JlYXRlIGEgbmV3IFJlcGxpY2F0ZSBBUEkgY2xpZW50IGluc3RhbmNlLlxuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucyAtIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdGhlIGNsaWVudFxuICAgKiBAcGFyYW0ge3N0cmluZ30gb3B0aW9ucy5hdXRoIC0gUmVxdWlyZWQuIEFQSSBhY2Nlc3MgdG9rZW5cbiAgICogQHBhcmFtIHtzdHJpbmd9IG9wdGlvbnMudXNlckFnZW50IC0gSWRlbnRpZmllciBvZiB5b3VyIGFwcFxuICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMuYmFzZVVybF0gLSBEZWZhdWx0cyB0byBodHRwczovL2FwaS5yZXBsaWNhdGUuY29tL3YxXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmZldGNoXSAtIEZldGNoIGZ1bmN0aW9uIHRvIHVzZS4gRGVmYXVsdHMgdG8gYGdsb2JhbFRoaXMuZmV0Y2hgXG4gICAqL1xuICBjb25zdHJ1Y3RvcihvcHRpb25zID0ge30pIHtcbiAgICB0aGlzLmF1dGggPSBvcHRpb25zLmF1dGg7XG4gICAgdGhpcy51c2VyQWdlbnQgPVxuICAgICAgb3B0aW9ucy51c2VyQWdlbnQgfHwgYHJlcGxpY2F0ZS1qYXZhc2NyaXB0LyR7cGFja2FnZUpTT04udmVyc2lvbn1gO1xuICAgIHRoaXMuYmFzZVVybCA9IG9wdGlvbnMuYmFzZVVybCB8fCAnaHR0cHM6Ly9hcGkucmVwbGljYXRlLmNvbS92MSc7XG4gICAgdGhpcy5mZXRjaCA9IG9wdGlvbnMuZmV0Y2ggfHwgZ2xvYmFsVGhpcy5mZXRjaDtcblxuICAgIHRoaXMuY29sbGVjdGlvbnMgPSB7XG4gICAgICBsaXN0OiBjb2xsZWN0aW9ucy5saXN0LmJpbmQodGhpcyksXG4gICAgICBnZXQ6IGNvbGxlY3Rpb25zLmdldC5iaW5kKHRoaXMpLFxuICAgIH07XG5cbiAgICB0aGlzLm1vZGVscyA9IHtcbiAgICAgIGdldDogbW9kZWxzLmdldC5iaW5kKHRoaXMpLFxuICAgICAgdmVyc2lvbnM6IHtcbiAgICAgICAgbGlzdDogbW9kZWxzLnZlcnNpb25zLmxpc3QuYmluZCh0aGlzKSxcbiAgICAgICAgZ2V0OiBtb2RlbHMudmVyc2lvbnMuZ2V0LmJpbmQodGhpcyksXG4gICAgICB9LFxuICAgIH07XG5cbiAgICB0aGlzLnByZWRpY3Rpb25zID0ge1xuICAgICAgY3JlYXRlOiBwcmVkaWN0aW9ucy5jcmVhdGUuYmluZCh0aGlzKSxcbiAgICAgIGdldDogcHJlZGljdGlvbnMuZ2V0LmJpbmQodGhpcyksXG4gICAgICBjYW5jZWw6IHByZWRpY3Rpb25zLmNhbmNlbC5iaW5kKHRoaXMpLFxuICAgICAgbGlzdDogcHJlZGljdGlvbnMubGlzdC5iaW5kKHRoaXMpLFxuICAgIH07XG5cbiAgICB0aGlzLnRyYWluaW5ncyA9IHtcbiAgICAgIGNyZWF0ZTogdHJhaW5pbmdzLmNyZWF0ZS5iaW5kKHRoaXMpLFxuICAgICAgZ2V0OiB0cmFpbmluZ3MuZ2V0LmJpbmQodGhpcyksXG4gICAgICBjYW5jZWw6IHRyYWluaW5ncy5jYW5jZWwuYmluZCh0aGlzKSxcbiAgICAgIGxpc3Q6IHRyYWluaW5ncy5saXN0LmJpbmQodGhpcyksXG4gICAgfTtcblxuICAgIHRoaXMuZGVwbG95bWVudHMgPSB7XG4gICAgICBwcmVkaWN0aW9uczoge1xuICAgICAgICBjcmVhdGU6IGRlcGxveW1lbnRzLnByZWRpY3Rpb25zLmNyZWF0ZS5iaW5kKHRoaXMpLFxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogUnVuIGEgbW9kZWwgYW5kIHdhaXQgZm9yIGl0cyBvdXRwdXQuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpZGVudGlmaWVyIC0gUmVxdWlyZWQuIFRoZSBtb2RlbCB2ZXJzaW9uIGlkZW50aWZpZXIgaW4gdGhlIGZvcm1hdCBcIntvd25lcn0ve25hbWV9Ont2ZXJzaW9ufVwiXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zLmlucHV0IC0gUmVxdWlyZWQuIEFuIG9iamVjdCB3aXRoIHRoZSBtb2RlbCBpbnB1dHNcbiAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zLndhaXRdIC0gT3B0aW9ucyBmb3Igd2FpdGluZyBmb3IgdGhlIHByZWRpY3Rpb24gdG8gZmluaXNoXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy53YWl0LmludGVydmFsXSAtIFBvbGxpbmcgaW50ZXJ2YWwgaW4gbWlsbGlzZWNvbmRzLiBEZWZhdWx0cyB0byA1MDBcbiAgICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLndlYmhvb2tdIC0gQW4gSFRUUFMgVVJMIGZvciByZWNlaXZpbmcgYSB3ZWJob29rIHdoZW4gdGhlIHByZWRpY3Rpb24gaGFzIG5ldyBvdXRwdXRcbiAgICogQHBhcmFtIHtzdHJpbmdbXX0gW29wdGlvbnMud2ViaG9va19ldmVudHNfZmlsdGVyXSAtIFlvdSBjYW4gY2hhbmdlIHdoaWNoIGV2ZW50cyB0cmlnZ2VyIHdlYmhvb2sgcmVxdWVzdHMgYnkgc3BlY2lmeWluZyB3ZWJob29rIGV2ZW50cyAoYHN0YXJ0YHxgb3V0cHV0YHxgbG9nc2B8YGNvbXBsZXRlZGApXG4gICAqIEBwYXJhbSB7QWJvcnRTaWduYWx9IFtvcHRpb25zLnNpZ25hbF0gLSBBYm9ydFNpZ25hbCB0byBjYW5jZWwgdGhlIHByZWRpY3Rpb25cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW3Byb2dyZXNzXSAtIENhbGxiYWNrIGZ1bmN0aW9uIHRoYXQgcmVjZWl2ZXMgdGhlIHByZWRpY3Rpb24gb2JqZWN0IGFzIGl0J3MgdXBkYXRlZC4gVGhlIGZ1bmN0aW9uIGlzIGNhbGxlZCB3aGVuIHRoZSBwcmVkaWN0aW9uIGlzIGNyZWF0ZWQsIGVhY2ggdGltZSBpdHMgdXBkYXRlZCB3aGlsZSBwb2xsaW5nIGZvciBjb21wbGV0aW9uLCBhbmQgd2hlbiBpdCdzIGNvbXBsZXRlZC5cbiAgICogQHRocm93cyB7RXJyb3J9IElmIHRoZSBwcmVkaWN0aW9uIGZhaWxlZFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxvYmplY3Q+fSAtIFJlc29sdmVzIHdpdGggdGhlIG91dHB1dCBvZiBydW5uaW5nIHRoZSBtb2RlbFxuICAgKi9cbiAgYXN5bmMgcnVuKGlkZW50aWZpZXIsIG9wdGlvbnMsIHByb2dyZXNzKSB7XG4gICAgY29uc3QgeyB3YWl0LCAuLi5kYXRhIH0gPSBvcHRpb25zO1xuXG4gICAgLy8gRGVmaW5lIGEgcGF0dGVybiBmb3Igb3duZXIgYW5kIG1vZGVsIG5hbWVzIHRoYXQgYWxsb3dzXG4gICAgLy8gbGV0dGVycywgZGlnaXRzLCBhbmQgY2VydGFpbiBzcGVjaWFsIGNoYXJhY3RlcnMuXG4gICAgLy8gRXhhbXBsZTogXCJ1c2VyMTIzXCIsIFwiYWJjX18xMjNcIiwgXCJ1c2VyLm5hbWVcIlxuICAgIGNvbnN0IG5hbWVQYXR0ZXJuID0gL1thLXpBLVowLTldKyg/Oig/OlsuX118X198Wy1dKilbYS16QS1aMC05XSspKi87XG5cbiAgICAvLyBEZWZpbmUgYSBwYXR0ZXJuIGZvciBcIm93bmVyL25hbWU6dmVyc2lvblwiIGZvcm1hdCB3aXRoIG5hbWVkIGNhcHR1cmluZyBncm91cHMuXG4gICAgLy8gRXhhbXBsZTogXCJ1c2VyMTIzL3JlcG9fYToxYTJiM2NcIlxuICAgIGNvbnN0IHBhdHRlcm4gPSBuZXcgUmVnRXhwKFxuICAgICAgYF4oPzxvd25lcj4ke25hbWVQYXR0ZXJuLnNvdXJjZX0pLyg/PG5hbWU+JHtuYW1lUGF0dGVybi5zb3VyY2V9KTooPzx2ZXJzaW9uPlswLTlhLWZBLUZdKykkYFxuICAgICk7XG5cbiAgICBjb25zdCBtYXRjaCA9IGlkZW50aWZpZXIubWF0Y2gocGF0dGVybik7XG4gICAgaWYgKCFtYXRjaCB8fCAhbWF0Y2guZ3JvdXBzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICdJbnZhbGlkIHZlcnNpb24uIEl0IG11c3QgYmUgaW4gdGhlIGZvcm1hdCBcIm93bmVyL25hbWU6dmVyc2lvblwiJ1xuICAgICAgKTtcbiAgICB9XG5cbiAgICBjb25zdCB7IHZlcnNpb24gfSA9IG1hdGNoLmdyb3VwcztcblxuICAgIGxldCBwcmVkaWN0aW9uID0gYXdhaXQgdGhpcy5wcmVkaWN0aW9ucy5jcmVhdGUoe1xuICAgICAgLi4uZGF0YSxcbiAgICAgIHZlcnNpb24sXG4gICAgfSk7XG5cbiAgICAvLyBDYWxsIHByb2dyZXNzIGNhbGxiYWNrIHdpdGggdGhlIGluaXRpYWwgcHJlZGljdGlvbiBvYmplY3RcbiAgICBpZiAocHJvZ3Jlc3MpIHtcbiAgICAgIHByb2dyZXNzKHByZWRpY3Rpb24pO1xuICAgIH1cblxuICAgIGNvbnN0IHsgc2lnbmFsIH0gPSBvcHRpb25zO1xuXG4gICAgcHJlZGljdGlvbiA9IGF3YWl0IHRoaXMud2FpdChwcmVkaWN0aW9uLCB3YWl0IHx8IHt9LCBhc3luYyAodXBkYXRlZFByZWRpY3Rpb24pID0+IHtcbiAgICAgIC8vIENhbGwgcHJvZ3Jlc3MgY2FsbGJhY2sgd2l0aCB0aGUgdXBkYXRlZCBwcmVkaWN0aW9uIG9iamVjdFxuICAgICAgaWYgKHByb2dyZXNzKSB7XG4gICAgICAgIHByb2dyZXNzKHVwZGF0ZWRQcmVkaWN0aW9uKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHNpZ25hbCAmJiBzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICBhd2FpdCB0aGlzLnByZWRpY3Rpb25zLmNhbmNlbCh1cGRhdGVkUHJlZGljdGlvbi5pZCk7XG4gICAgICAgIHJldHVybiB0cnVlOyAvLyBzdG9wIHBvbGxpbmdcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZhbHNlOyAvLyBjb250aW51ZSBwb2xsaW5nXG4gICAgfSk7XG5cbiAgICAvLyBDYWxsIHByb2dyZXNzIGNhbGxiYWNrIHdpdGggdGhlIGNvbXBsZXRlZCBwcmVkaWN0aW9uIG9iamVjdFxuICAgIGlmIChwcm9ncmVzcykge1xuICAgICAgcHJvZ3Jlc3MocHJlZGljdGlvbik7XG4gICAgfVxuXG4gICAgaWYgKHByZWRpY3Rpb24uc3RhdHVzID09PSAnZmFpbGVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBQcmVkaWN0aW9uIGZhaWxlZDogJHtwcmVkaWN0aW9uLmVycm9yfWApO1xuICAgIH1cblxuICAgIHJldHVybiBwcmVkaWN0aW9uLm91dHB1dDtcbiAgfVxuXG4gIC8qKlxuICAgKiBNYWtlIGEgcmVxdWVzdCB0byB0aGUgUmVwbGljYXRlIEFQSS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHJvdXRlIC0gUkVTVCBBUEkgZW5kcG9pbnQgcGF0aFxuICAgKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucyAtIFJlcXVlc3QgcGFyYW1ldGVyc1xuICAgKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMubWV0aG9kXSAtIEhUVFAgbWV0aG9kLiBEZWZhdWx0cyB0byBHRVRcbiAgICogQHBhcmFtIHtvYmplY3R9IFtvcHRpb25zLnBhcmFtc10gLSBRdWVyeSBwYXJhbWV0ZXJzXG4gICAqIEBwYXJhbSB7b2JqZWN0fEhlYWRlcnN9IFtvcHRpb25zLmhlYWRlcnNdIC0gSFRUUCBoZWFkZXJzXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbb3B0aW9ucy5kYXRhXSAtIEJvZHkgcGFyYW1ldGVyc1xuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxSZXNwb25zZT59IC0gUmVzb2x2ZXMgd2l0aCB0aGUgcmVzcG9uc2Ugb2JqZWN0XG4gICAqIEB0aHJvd3Mge0FwaUVycm9yfSBJZiB0aGUgcmVxdWVzdCBmYWlsZWRcbiAgICovXG4gIGFzeW5jIHJlcXVlc3Qocm91dGUsIG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IGF1dGgsIGJhc2VVcmwsIHVzZXJBZ2VudCB9ID0gdGhpcztcblxuICAgIGxldCB1cmw7XG4gICAgaWYgKHJvdXRlIGluc3RhbmNlb2YgVVJMKSB7XG4gICAgICB1cmwgPSByb3V0ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdXJsID0gbmV3IFVSTChcbiAgICAgICAgcm91dGUuc3RhcnRzV2l0aCgnLycpID8gcm91dGUuc2xpY2UoMSkgOiByb3V0ZSxcbiAgICAgICAgYmFzZVVybC5lbmRzV2l0aCgnLycpID8gYmFzZVVybCA6IGAke2Jhc2VVcmx9L2BcbiAgICAgICk7XG4gICAgfVxuXG4gICAgY29uc3Qge1xuICAgICAgbWV0aG9kID0gJ0dFVCcsXG4gICAgICBwYXJhbXMgPSB7fSxcbiAgICAgIGRhdGEsXG4gICAgfSA9IG9wdGlvbnM7XG5cbiAgICBPYmplY3QuZW50cmllcyhwYXJhbXMpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgdXJsLnNlYXJjaFBhcmFtcy5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgfSk7XG5cbiAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcbiAgICBpZiAoYXV0aCkge1xuICAgICAgaGVhZGVycy5hcHBlbmQoJ0F1dGhvcml6YXRpb24nLCBgVG9rZW4gJHthdXRofWApO1xuICAgIH1cbiAgICBoZWFkZXJzLmFwcGVuZCgnQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKTtcbiAgICBoZWFkZXJzLmFwcGVuZCgnVXNlci1BZ2VudCcsIHVzZXJBZ2VudCk7XG4gICAgaWYgKG9wdGlvbnMuaGVhZGVycykge1xuICAgICAgb3B0aW9ucy5oZWFkZXJzLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgaGVhZGVycy5hcHBlbmQoa2V5LCB2YWx1ZSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBpbml0ID0ge1xuICAgICAgbWV0aG9kLFxuICAgICAgaGVhZGVycyxcbiAgICAgIGJvZHk6IGRhdGEgPyBKU09OLnN0cmluZ2lmeShkYXRhKSA6IHVuZGVmaW5lZCxcbiAgICB9O1xuXG4gICAgY29uc3Qgc2hvdWxkUmV0cnkgPSBtZXRob2QgPT09ICdHRVQnID9cbiAgICAgIChyZXNwb25zZSkgPT4gKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDI5IHx8IHJlc3BvbnNlLnN0YXR1cyA+PSA1MDApIDpcbiAgICAgIChyZXNwb25zZSkgPT4gKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDI5KTtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHdpdGhBdXRvbWF0aWNSZXRyaWVzKGFzeW5jICgpID0+IHRoaXMuZmV0Y2godXJsLCBpbml0KSwgeyBzaG91bGRSZXRyeSB9KTtcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIGNvbnN0IHJlcXVlc3QgPSBuZXcgUmVxdWVzdCh1cmwsIGluaXQpO1xuICAgICAgY29uc3QgcmVzcG9uc2VUZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuICAgICAgdGhyb3cgbmV3IEFwaUVycm9yKFxuICAgICAgICBgUmVxdWVzdCB0byAke3VybH0gZmFpbGVkIHdpdGggc3RhdHVzICR7cmVzcG9uc2Uuc3RhdHVzfSAke3Jlc3BvbnNlLnN0YXR1c1RleHR9OiAke3Jlc3BvbnNlVGV4dH0uYCxcbiAgICAgICAgcmVxdWVzdCxcbiAgICAgICAgcmVzcG9uc2UsXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQYWdpbmF0ZSB0aHJvdWdoIGEgbGlzdCBvZiByZXN1bHRzLlxuICAgKlxuICAgKiBAZ2VuZXJhdG9yXG4gICAqIEBleGFtcGxlXG4gICAqIGZvciBhd2FpdCAoY29uc3QgcGFnZSBvZiByZXBsaWNhdGUucGFnaW5hdGUocmVwbGljYXRlLnByZWRpY3Rpb25zLmxpc3QpIHtcbiAgICogICAgY29uc29sZS5sb2cocGFnZSk7XG4gICAqIH1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZW5kcG9pbnQgLSBGdW5jdGlvbiB0aGF0IHJldHVybnMgYSBwcm9taXNlIGZvciB0aGUgbmV4dCBwYWdlIG9mIHJlc3VsdHNcbiAgICogQHlpZWxkcyB7b2JqZWN0W119IEVhY2ggcGFnZSBvZiByZXN1bHRzXG4gICAqL1xuICBhc3luYyAqIHBhZ2luYXRlKGVuZHBvaW50KSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBlbmRwb2ludCgpO1xuICAgIHlpZWxkIHJlc3BvbnNlLnJlc3VsdHM7XG4gICAgaWYgKHJlc3BvbnNlLm5leHQpIHtcbiAgICAgIGNvbnN0IG5leHRQYWdlID0gKCkgPT4gdGhpcy5yZXF1ZXN0KHJlc3BvbnNlLm5leHQsIHsgbWV0aG9kOiAnR0VUJyB9KS50aGVuKChyKSA9PiByLmpzb24oKSk7XG4gICAgICB5aWVsZCogdGhpcy5wYWdpbmF0ZShuZXh0UGFnZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFdhaXQgZm9yIGEgcHJlZGljdGlvbiB0byBmaW5pc2guXG4gICAqXG4gICAqIElmIHRoZSBwcmVkaWN0aW9uIGhhcyBhbHJlYWR5IGZpbmlzaGVkLFxuICAgKiB0aGlzIGZ1bmN0aW9uIHJldHVybnMgaW1tZWRpYXRlbHkuXG4gICAqIE90aGVyd2lzZSwgaXQgcG9sbHMgdGhlIEFQSSB1bnRpbCB0aGUgcHJlZGljdGlvbiBmaW5pc2hlcy5cbiAgICpcbiAgICogQGFzeW5jXG4gICAqIEBwYXJhbSB7b2JqZWN0fSBwcmVkaWN0aW9uIC0gUHJlZGljdGlvbiBvYmplY3RcbiAgICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnMgLSBPcHRpb25zXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5pbnRlcnZhbF0gLSBQb2xsaW5nIGludGVydmFsIGluIG1pbGxpc2Vjb25kcy4gRGVmYXVsdHMgdG8gNTAwXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtzdG9wXSAtIEFzeW5jIGNhbGxiYWNrIGZ1bmN0aW9uIHRoYXQgaXMgY2FsbGVkIGFmdGVyIGVhY2ggcG9sbGluZyBhdHRlbXB0LiBSZWNlaXZlcyB0aGUgcHJlZGljdGlvbiBvYmplY3QgYXMgYW4gYXJndW1lbnQuIFJldHVybiBmYWxzZSB0byBjYW5jZWwgcG9sbGluZy5cbiAgICogQHRocm93cyB7RXJyb3J9IElmIHRoZSBwcmVkaWN0aW9uIGRvZXNuJ3QgY29tcGxldGUgd2l0aGluIHRoZSBtYXhpbXVtIG51bWJlciBvZiBhdHRlbXB0c1xuICAgKiBAdGhyb3dzIHtFcnJvcn0gSWYgdGhlIHByZWRpY3Rpb24gZmFpbGVkXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPG9iamVjdD59IFJlc29sdmVzIHdpdGggdGhlIGNvbXBsZXRlZCBwcmVkaWN0aW9uIG9iamVjdFxuICAgKi9cbiAgYXN5bmMgd2FpdChwcmVkaWN0aW9uLCBvcHRpb25zLCBzdG9wKSB7XG4gICAgY29uc3QgeyBpZCB9ID0gcHJlZGljdGlvbjtcbiAgICBpZiAoIWlkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcHJlZGljdGlvbicpO1xuICAgIH1cblxuICAgIGlmIChcbiAgICAgIHByZWRpY3Rpb24uc3RhdHVzID09PSAnc3VjY2VlZGVkJyB8fFxuICAgICAgcHJlZGljdGlvbi5zdGF0dXMgPT09ICdmYWlsZWQnIHx8XG4gICAgICBwcmVkaWN0aW9uLnN0YXR1cyA9PT0gJ2NhbmNlbGVkJ1xuICAgICkge1xuICAgICAgcmV0dXJuIHByZWRpY3Rpb247XG4gICAgfVxuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb21pc2UtZXhlY3V0b3ItcmV0dXJuXG4gICAgY29uc3Qgc2xlZXAgPSAobXMpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKSk7XG5cbiAgICBjb25zdCBpbnRlcnZhbCA9IChvcHRpb25zICYmIG9wdGlvbnMuaW50ZXJ2YWwpIHx8IDUwMDtcblxuICAgIGxldCB1cGRhdGVkUHJlZGljdGlvbiA9IGF3YWl0IHRoaXMucHJlZGljdGlvbnMuZ2V0KGlkKTtcblxuICAgIHdoaWxlIChcbiAgICAgIHVwZGF0ZWRQcmVkaWN0aW9uLnN0YXR1cyAhPT0gJ3N1Y2NlZWRlZCcgJiZcbiAgICAgIHVwZGF0ZWRQcmVkaWN0aW9uLnN0YXR1cyAhPT0gJ2ZhaWxlZCcgJiZcbiAgICAgIHVwZGF0ZWRQcmVkaWN0aW9uLnN0YXR1cyAhPT0gJ2NhbmNlbGVkJ1xuICAgICkge1xuICAgICAgLyogZXNsaW50LWRpc2FibGUgbm8tYXdhaXQtaW4tbG9vcCAqL1xuICAgICAgaWYgKHN0b3AgJiYgYXdhaXQgc3RvcCh1cGRhdGVkUHJlZGljdGlvbikgPT09IHRydWUpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIGF3YWl0IHNsZWVwKGludGVydmFsKTtcbiAgICAgIHVwZGF0ZWRQcmVkaWN0aW9uID0gYXdhaXQgdGhpcy5wcmVkaWN0aW9ucy5nZXQocHJlZGljdGlvbi5pZCk7XG4gICAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLWF3YWl0LWluLWxvb3AgKi9cbiAgICB9XG5cbiAgICBpZiAodXBkYXRlZFByZWRpY3Rpb24uc3RhdHVzID09PSAnZmFpbGVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBQcmVkaWN0aW9uIGZhaWxlZDogJHt1cGRhdGVkUHJlZGljdGlvbi5lcnJvcn1gKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdXBkYXRlZFByZWRpY3Rpb247XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBSZXBsaWNhdGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/replicate/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/replicate/lib/collections.js":
/*!***************************************************!*\
  !*** ./node_modules/replicate/lib/collections.js ***!
  \***************************************************/
/***/ ((module) => {

eval("/**\n * Fetch a model collection\n *\n * @param {string} collection_slug - Required. The slug of the collection. See http://replicate.com/collections\n * @returns {Promise<object>} - Resolves with the collection data\n */\nasync function getCollection(collection_slug) {\n  const response = await this.request(`/collections/${collection_slug}`, {\n    method: 'GET',\n  });\n\n  return response.json();\n}\n\n/**\n * Fetch a list of model collections\n *\n * @returns {Promise<object>} - Resolves with the collections data\n */\nasync function listCollections() {\n  const response = await this.request('/collections', {\n    method: 'GET',\n  });\n\n  return response.json();\n}\n\nmodule.exports = { get: getCollection, list: listCollections };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVwbGljYXRlL2xpYi9jb2xsZWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBLHNEQUFzRCxnQkFBZ0I7QUFDdEU7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUEsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktY29tcGFuaW9uLy4vbm9kZV9tb2R1bGVzL3JlcGxpY2F0ZS9saWIvY29sbGVjdGlvbnMuanM/YzI5YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZldGNoIGEgbW9kZWwgY29sbGVjdGlvblxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2xsZWN0aW9uX3NsdWcgLSBSZXF1aXJlZC4gVGhlIHNsdWcgb2YgdGhlIGNvbGxlY3Rpb24uIFNlZSBodHRwOi8vcmVwbGljYXRlLmNvbS9jb2xsZWN0aW9uc1xuICogQHJldHVybnMge1Byb21pc2U8b2JqZWN0Pn0gLSBSZXNvbHZlcyB3aXRoIHRoZSBjb2xsZWN0aW9uIGRhdGFcbiAqL1xuYXN5bmMgZnVuY3Rpb24gZ2V0Q29sbGVjdGlvbihjb2xsZWN0aW9uX3NsdWcpIHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnJlcXVlc3QoYC9jb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb25fc2x1Z31gLCB7XG4gICAgbWV0aG9kOiAnR0VUJyxcbiAgfSk7XG5cbiAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbn1cblxuLyoqXG4gKiBGZXRjaCBhIGxpc3Qgb2YgbW9kZWwgY29sbGVjdGlvbnNcbiAqXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxvYmplY3Q+fSAtIFJlc29sdmVzIHdpdGggdGhlIGNvbGxlY3Rpb25zIGRhdGFcbiAqL1xuYXN5bmMgZnVuY3Rpb24gbGlzdENvbGxlY3Rpb25zKCkge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMucmVxdWVzdCgnL2NvbGxlY3Rpb25zJywge1xuICAgIG1ldGhvZDogJ0dFVCcsXG4gIH0pO1xuXG4gIHJldHVybiByZXNwb25zZS5qc29uKCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0geyBnZXQ6IGdldENvbGxlY3Rpb24sIGxpc3Q6IGxpc3RDb2xsZWN0aW9ucyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/replicate/lib/collections.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/replicate/lib/deployments.js":
/*!***************************************************!*\
  !*** ./node_modules/replicate/lib/deployments.js ***!
  \***************************************************/
/***/ ((module) => {

eval("/**\n * Create a new prediction with a deployment\n *\n * @param {string} deployment_owner - Required. The username of the user or organization who owns the deployment\n * @param {string} deployment_name - Required. The name of the deployment\n * @param {object} options\n * @param {object} options.input - Required. An object with the model inputs\n * @param {boolean} [options.stream] - Whether to stream the prediction output. Defaults to false\n * @param {string} [options.webhook] - An HTTPS URL for receiving a webhook when the prediction has new output\n * @param {string[]} [options.webhook_events_filter] - You can change which events trigger webhook requests by specifying webhook events (`start`|`output`|`logs`|`completed`)\n * @returns {Promise<object>} Resolves with the created prediction data\n */\nasync function createPrediction(deployment_owner, deployment_name, options) {\n  const { stream, ...data } = options;\n\n  if (data.webhook) {\n    try {\n      // eslint-disable-next-line no-new\n      new URL(data.webhook);\n    } catch (err) {\n      throw new Error('Invalid webhook URL');\n    }\n  }\n\n  const response = await this.request(`/deployments/${deployment_owner}/${deployment_name}/predictions`, {\n    method: 'POST',\n    data: { ...data, stream },\n  });\n\n  return response.json();\n}\n\nmodule.exports = {\n  predictions: {\n    create: createPrediction,\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVwbGljYXRlL2xpYi9kZXBsb3ltZW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBLFVBQVUsa0JBQWtCOztBQUU1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUEsc0RBQXNELGlCQUFpQixHQUFHLGdCQUFnQjtBQUMxRjtBQUNBLFlBQVksaUJBQWlCO0FBQzdCLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktY29tcGFuaW9uLy4vbm9kZV9tb2R1bGVzL3JlcGxpY2F0ZS9saWIvZGVwbG95bWVudHMuanM/YzE1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZSBhIG5ldyBwcmVkaWN0aW9uIHdpdGggYSBkZXBsb3ltZW50XG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGRlcGxveW1lbnRfb3duZXIgLSBSZXF1aXJlZC4gVGhlIHVzZXJuYW1lIG9mIHRoZSB1c2VyIG9yIG9yZ2FuaXphdGlvbiB3aG8gb3ducyB0aGUgZGVwbG95bWVudFxuICogQHBhcmFtIHtzdHJpbmd9IGRlcGxveW1lbnRfbmFtZSAtIFJlcXVpcmVkLiBUaGUgbmFtZSBvZiB0aGUgZGVwbG95bWVudFxuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnNcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zLmlucHV0IC0gUmVxdWlyZWQuIEFuIG9iamVjdCB3aXRoIHRoZSBtb2RlbCBpbnB1dHNcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMuc3RyZWFtXSAtIFdoZXRoZXIgdG8gc3RyZWFtIHRoZSBwcmVkaWN0aW9uIG91dHB1dC4gRGVmYXVsdHMgdG8gZmFsc2VcbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy53ZWJob29rXSAtIEFuIEhUVFBTIFVSTCBmb3IgcmVjZWl2aW5nIGEgd2ViaG9vayB3aGVuIHRoZSBwcmVkaWN0aW9uIGhhcyBuZXcgb3V0cHV0XG4gKiBAcGFyYW0ge3N0cmluZ1tdfSBbb3B0aW9ucy53ZWJob29rX2V2ZW50c19maWx0ZXJdIC0gWW91IGNhbiBjaGFuZ2Ugd2hpY2ggZXZlbnRzIHRyaWdnZXIgd2ViaG9vayByZXF1ZXN0cyBieSBzcGVjaWZ5aW5nIHdlYmhvb2sgZXZlbnRzIChgc3RhcnRgfGBvdXRwdXRgfGBsb2dzYHxgY29tcGxldGVkYClcbiAqIEByZXR1cm5zIHtQcm9taXNlPG9iamVjdD59IFJlc29sdmVzIHdpdGggdGhlIGNyZWF0ZWQgcHJlZGljdGlvbiBkYXRhXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVByZWRpY3Rpb24oZGVwbG95bWVudF9vd25lciwgZGVwbG95bWVudF9uYW1lLCBvcHRpb25zKSB7XG4gIGNvbnN0IHsgc3RyZWFtLCAuLi5kYXRhIH0gPSBvcHRpb25zO1xuXG4gIGlmIChkYXRhLndlYmhvb2spIHtcbiAgICB0cnkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ld1xuICAgICAgbmV3IFVSTChkYXRhLndlYmhvb2spO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHdlYmhvb2sgVVJMJyk7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnJlcXVlc3QoYC9kZXBsb3ltZW50cy8ke2RlcGxveW1lbnRfb3duZXJ9LyR7ZGVwbG95bWVudF9uYW1lfS9wcmVkaWN0aW9uc2AsIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBkYXRhOiB7IC4uLmRhdGEsIHN0cmVhbSB9LFxuICB9KTtcblxuICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcHJlZGljdGlvbnM6IHtcbiAgICBjcmVhdGU6IGNyZWF0ZVByZWRpY3Rpb24sXG4gIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/replicate/lib/deployments.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/replicate/lib/error.js":
/*!*********************************************!*\
  !*** ./node_modules/replicate/lib/error.js ***!
  \*********************************************/
/***/ ((module) => {

eval("/**\n * A representation of an API error.\n */\nclass ApiError extends Error {\n  /**\n   * Creates a representation of an API error.\n   *\n   * @param {string} message - Error message\n   * @param {Request} request - HTTP request\n   * @param {Response} response - HTTP response\n   * @returns {ApiError} - An instance of ApiError\n   */\n  constructor(message, request, response) {\n    super(message);\n    this.name = 'ApiError';\n    this.request = request;\n    this.response = response;\n  }\n}\n\nmodule.exports = ApiError;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVwbGljYXRlL2xpYi9lcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQixhQUFhLFNBQVM7QUFDdEIsYUFBYSxVQUFVO0FBQ3ZCLGVBQWUsVUFBVTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktY29tcGFuaW9uLy4vbm9kZV9tb2R1bGVzL3JlcGxpY2F0ZS9saWIvZXJyb3IuanM/MmMwNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgcmVwcmVzZW50YXRpb24gb2YgYW4gQVBJIGVycm9yLlxuICovXG5jbGFzcyBBcGlFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgLyoqXG4gICAqIENyZWF0ZXMgYSByZXByZXNlbnRhdGlvbiBvZiBhbiBBUEkgZXJyb3IuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIC0gRXJyb3IgbWVzc2FnZVxuICAgKiBAcGFyYW0ge1JlcXVlc3R9IHJlcXVlc3QgLSBIVFRQIHJlcXVlc3RcbiAgICogQHBhcmFtIHtSZXNwb25zZX0gcmVzcG9uc2UgLSBIVFRQIHJlc3BvbnNlXG4gICAqIEByZXR1cm5zIHtBcGlFcnJvcn0gLSBBbiBpbnN0YW5jZSBvZiBBcGlFcnJvclxuICAgKi9cbiAgY29uc3RydWN0b3IobWVzc2FnZSwgcmVxdWVzdCwgcmVzcG9uc2UpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSAnQXBpRXJyb3InO1xuICAgIHRoaXMucmVxdWVzdCA9IHJlcXVlc3Q7XG4gICAgdGhpcy5yZXNwb25zZSA9IHJlc3BvbnNlO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQXBpRXJyb3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/replicate/lib/error.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/replicate/lib/models.js":
/*!**********************************************!*\
  !*** ./node_modules/replicate/lib/models.js ***!
  \**********************************************/
/***/ ((module) => {

eval("/**\n * Get information about a model\n *\n * @param {string} model_owner - Required. The name of the user or organization that owns the model\n * @param {string} model_name - Required. The name of the model\n * @returns {Promise<object>} Resolves with the model data\n */\nasync function getModel(model_owner, model_name) {\n  const response = await this.request(`/models/${model_owner}/${model_name}`, {\n    method: 'GET',\n  });\n\n  return response.json();\n}\n\n/**\n * List model versions\n *\n * @param {string} model_owner - Required. The name of the user or organization that owns the model\n * @param {string} model_name - Required. The name of the model\n * @returns {Promise<object>} Resolves with the list of model versions\n */\nasync function listModelVersions(model_owner, model_name) {\n  const response = await this.request(`/models/${model_owner}/${model_name}/versions`, {\n    method: 'GET',\n  });\n\n  return response.json();\n}\n\n/**\n * Get a specific model version\n *\n * @param {string} model_owner - Required. The name of the user or organization that owns the model\n * @param {string} model_name - Required. The name of the model\n * @param {string} version_id - Required. The model version\n * @returns {Promise<object>} Resolves with the model version data\n */\nasync function getModelVersion(model_owner, model_name, version_id) {\n  const response = await this.request(\n    `/models/${model_owner}/${model_name}/versions/${version_id}`,\n    {\n      method: 'GET',\n    }\n  );\n\n  return response.json();\n}\n\nmodule.exports = {\n  get: getModel,\n  versions: { list: listModelVersions, get: getModelVersion },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVwbGljYXRlL2xpYi9tb2RlbHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0EsaURBQWlELFlBQVksR0FBRyxXQUFXO0FBQzNFO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBLGlEQUFpRCxZQUFZLEdBQUcsV0FBVztBQUMzRTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFlBQVksR0FBRyxXQUFXLFlBQVksV0FBVztBQUNoRTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxjQUFjLCtDQUErQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL2FpLWNvbXBhbmlvbi8uL25vZGVfbW9kdWxlcy9yZXBsaWNhdGUvbGliL21vZGVscy5qcz9jMzdlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0IGluZm9ybWF0aW9uIGFib3V0IGEgbW9kZWxcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbW9kZWxfb3duZXIgLSBSZXF1aXJlZC4gVGhlIG5hbWUgb2YgdGhlIHVzZXIgb3Igb3JnYW5pemF0aW9uIHRoYXQgb3ducyB0aGUgbW9kZWxcbiAqIEBwYXJhbSB7c3RyaW5nfSBtb2RlbF9uYW1lIC0gUmVxdWlyZWQuIFRoZSBuYW1lIG9mIHRoZSBtb2RlbFxuICogQHJldHVybnMge1Byb21pc2U8b2JqZWN0Pn0gUmVzb2x2ZXMgd2l0aCB0aGUgbW9kZWwgZGF0YVxuICovXG5hc3luYyBmdW5jdGlvbiBnZXRNb2RlbChtb2RlbF9vd25lciwgbW9kZWxfbmFtZSkge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMucmVxdWVzdChgL21vZGVscy8ke21vZGVsX293bmVyfS8ke21vZGVsX25hbWV9YCwge1xuICAgIG1ldGhvZDogJ0dFVCcsXG4gIH0pO1xuXG4gIHJldHVybiByZXNwb25zZS5qc29uKCk7XG59XG5cbi8qKlxuICogTGlzdCBtb2RlbCB2ZXJzaW9uc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBtb2RlbF9vd25lciAtIFJlcXVpcmVkLiBUaGUgbmFtZSBvZiB0aGUgdXNlciBvciBvcmdhbml6YXRpb24gdGhhdCBvd25zIHRoZSBtb2RlbFxuICogQHBhcmFtIHtzdHJpbmd9IG1vZGVsX25hbWUgLSBSZXF1aXJlZC4gVGhlIG5hbWUgb2YgdGhlIG1vZGVsXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxvYmplY3Q+fSBSZXNvbHZlcyB3aXRoIHRoZSBsaXN0IG9mIG1vZGVsIHZlcnNpb25zXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGxpc3RNb2RlbFZlcnNpb25zKG1vZGVsX293bmVyLCBtb2RlbF9uYW1lKSB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5yZXF1ZXN0KGAvbW9kZWxzLyR7bW9kZWxfb3duZXJ9LyR7bW9kZWxfbmFtZX0vdmVyc2lvbnNgLCB7XG4gICAgbWV0aG9kOiAnR0VUJyxcbiAgfSk7XG5cbiAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbn1cblxuLyoqXG4gKiBHZXQgYSBzcGVjaWZpYyBtb2RlbCB2ZXJzaW9uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG1vZGVsX293bmVyIC0gUmVxdWlyZWQuIFRoZSBuYW1lIG9mIHRoZSB1c2VyIG9yIG9yZ2FuaXphdGlvbiB0aGF0IG93bnMgdGhlIG1vZGVsXG4gKiBAcGFyYW0ge3N0cmluZ30gbW9kZWxfbmFtZSAtIFJlcXVpcmVkLiBUaGUgbmFtZSBvZiB0aGUgbW9kZWxcbiAqIEBwYXJhbSB7c3RyaW5nfSB2ZXJzaW9uX2lkIC0gUmVxdWlyZWQuIFRoZSBtb2RlbCB2ZXJzaW9uXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxvYmplY3Q+fSBSZXNvbHZlcyB3aXRoIHRoZSBtb2RlbCB2ZXJzaW9uIGRhdGFcbiAqL1xuYXN5bmMgZnVuY3Rpb24gZ2V0TW9kZWxWZXJzaW9uKG1vZGVsX293bmVyLCBtb2RlbF9uYW1lLCB2ZXJzaW9uX2lkKSB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5yZXF1ZXN0KFxuICAgIGAvbW9kZWxzLyR7bW9kZWxfb3duZXJ9LyR7bW9kZWxfbmFtZX0vdmVyc2lvbnMvJHt2ZXJzaW9uX2lkfWAsXG4gICAge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICB9XG4gICk7XG5cbiAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldDogZ2V0TW9kZWwsXG4gIHZlcnNpb25zOiB7IGxpc3Q6IGxpc3RNb2RlbFZlcnNpb25zLCBnZXQ6IGdldE1vZGVsVmVyc2lvbiB9LFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/replicate/lib/models.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/replicate/lib/predictions.js":
/*!***************************************************!*\
  !*** ./node_modules/replicate/lib/predictions.js ***!
  \***************************************************/
/***/ ((module) => {

eval("/**\n * Create a new prediction\n *\n * @param {object} options\n * @param {string} options.version - Required. The model version\n * @param {object} options.input - Required. An object with the model inputs\n * @param {string} [options.webhook] - An HTTPS URL for receiving a webhook when the prediction has new output\n * @param {string[]} [options.webhook_events_filter] - You can change which events trigger webhook requests by specifying webhook events (`start`|`output`|`logs`|`completed`)\n * @param {boolean} [options.stream] - Whether to stream the prediction output. Defaults to false\n * @returns {Promise<object>} Resolves with the created prediction\n */\nasync function createPrediction(options) {\n  const { stream, ...data } = options;\n\n  if (data.webhook) {\n    try {\n      // eslint-disable-next-line no-new\n      new URL(data.webhook);\n    } catch (err) {\n      throw new Error('Invalid webhook URL');\n    }\n  }\n\n  const response = await this.request('/predictions', {\n    method: 'POST',\n    data: { ...data, stream },\n  });\n\n  return response.json();\n}\n\n/**\n * Fetch a prediction by ID\n *\n * @param {number} prediction_id - Required. The prediction ID\n * @returns {Promise<object>} Resolves with the prediction data\n */\nasync function getPrediction(prediction_id) {\n  const response = await this.request(`/predictions/${prediction_id}`, {\n    method: 'GET',\n  });\n\n  return response.json();\n}\n\n/**\n * Cancel a prediction by ID\n *\n * @param {string} prediction_id - Required. The training ID\n * @returns {Promise<object>} Resolves with the data for the training\n */\nasync function cancelPrediction(prediction_id) {\n  const response = await this.request(`/predictions/${prediction_id}/cancel`, {\n    method: 'POST',\n  });\n\n  return response.json();\n}\n\n/**\n * List all predictions\n *\n * @returns {Promise<object>} - Resolves with a page of predictions\n */\nasync function listPredictions() {\n  const response = await this.request('/predictions', {\n    method: 'GET',\n  });\n\n  return response.json();\n}\n\nmodule.exports = {\n  create: createPrediction,\n  get: getPrediction,\n  cancel: cancelPrediction,\n  list: listPredictions,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVwbGljYXRlL2xpYi9wcmVkaWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsU0FBUztBQUNwQixhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0EsVUFBVSxrQkFBa0I7O0FBRTVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWSxpQkFBaUI7QUFDN0IsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0Esc0RBQXNELGNBQWM7QUFDcEU7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0E7QUFDQSxzREFBc0QsY0FBYztBQUNwRTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9haS1jb21wYW5pb24vLi9ub2RlX21vZHVsZXMvcmVwbGljYXRlL2xpYi9wcmVkaWN0aW9ucy5qcz9iNjhhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlIGEgbmV3IHByZWRpY3Rpb25cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtzdHJpbmd9IG9wdGlvbnMudmVyc2lvbiAtIFJlcXVpcmVkLiBUaGUgbW9kZWwgdmVyc2lvblxuICogQHBhcmFtIHtvYmplY3R9IG9wdGlvbnMuaW5wdXQgLSBSZXF1aXJlZC4gQW4gb2JqZWN0IHdpdGggdGhlIG1vZGVsIGlucHV0c1xuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLndlYmhvb2tdIC0gQW4gSFRUUFMgVVJMIGZvciByZWNlaXZpbmcgYSB3ZWJob29rIHdoZW4gdGhlIHByZWRpY3Rpb24gaGFzIG5ldyBvdXRwdXRcbiAqIEBwYXJhbSB7c3RyaW5nW119IFtvcHRpb25zLndlYmhvb2tfZXZlbnRzX2ZpbHRlcl0gLSBZb3UgY2FuIGNoYW5nZSB3aGljaCBldmVudHMgdHJpZ2dlciB3ZWJob29rIHJlcXVlc3RzIGJ5IHNwZWNpZnlpbmcgd2ViaG9vayBldmVudHMgKGBzdGFydGB8YG91dHB1dGB8YGxvZ3NgfGBjb21wbGV0ZWRgKVxuICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5zdHJlYW1dIC0gV2hldGhlciB0byBzdHJlYW0gdGhlIHByZWRpY3Rpb24gb3V0cHV0LiBEZWZhdWx0cyB0byBmYWxzZVxuICogQHJldHVybnMge1Byb21pc2U8b2JqZWN0Pn0gUmVzb2x2ZXMgd2l0aCB0aGUgY3JlYXRlZCBwcmVkaWN0aW9uXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVByZWRpY3Rpb24ob3B0aW9ucykge1xuICBjb25zdCB7IHN0cmVhbSwgLi4uZGF0YSB9ID0gb3B0aW9ucztcblxuICBpZiAoZGF0YS53ZWJob29rKSB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXdcbiAgICAgIG5ldyBVUkwoZGF0YS53ZWJob29rKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCB3ZWJob29rIFVSTCcpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5yZXF1ZXN0KCcvcHJlZGljdGlvbnMnLCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgZGF0YTogeyAuLi5kYXRhLCBzdHJlYW0gfSxcbiAgfSk7XG5cbiAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbn1cblxuLyoqXG4gKiBGZXRjaCBhIHByZWRpY3Rpb24gYnkgSURcbiAqXG4gKiBAcGFyYW0ge251bWJlcn0gcHJlZGljdGlvbl9pZCAtIFJlcXVpcmVkLiBUaGUgcHJlZGljdGlvbiBJRFxuICogQHJldHVybnMge1Byb21pc2U8b2JqZWN0Pn0gUmVzb2x2ZXMgd2l0aCB0aGUgcHJlZGljdGlvbiBkYXRhXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGdldFByZWRpY3Rpb24ocHJlZGljdGlvbl9pZCkge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMucmVxdWVzdChgL3ByZWRpY3Rpb25zLyR7cHJlZGljdGlvbl9pZH1gLCB7XG4gICAgbWV0aG9kOiAnR0VUJyxcbiAgfSk7XG5cbiAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbn1cblxuLyoqXG4gKiBDYW5jZWwgYSBwcmVkaWN0aW9uIGJ5IElEXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHByZWRpY3Rpb25faWQgLSBSZXF1aXJlZC4gVGhlIHRyYWluaW5nIElEXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxvYmplY3Q+fSBSZXNvbHZlcyB3aXRoIHRoZSBkYXRhIGZvciB0aGUgdHJhaW5pbmdcbiAqL1xuYXN5bmMgZnVuY3Rpb24gY2FuY2VsUHJlZGljdGlvbihwcmVkaWN0aW9uX2lkKSB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5yZXF1ZXN0KGAvcHJlZGljdGlvbnMvJHtwcmVkaWN0aW9uX2lkfS9jYW5jZWxgLCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gIH0pO1xuXG4gIHJldHVybiByZXNwb25zZS5qc29uKCk7XG59XG5cbi8qKlxuICogTGlzdCBhbGwgcHJlZGljdGlvbnNcbiAqXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxvYmplY3Q+fSAtIFJlc29sdmVzIHdpdGggYSBwYWdlIG9mIHByZWRpY3Rpb25zXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGxpc3RQcmVkaWN0aW9ucygpIHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLnJlcXVlc3QoJy9wcmVkaWN0aW9ucycsIHtcbiAgICBtZXRob2Q6ICdHRVQnLFxuICB9KTtcblxuICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY3JlYXRlOiBjcmVhdGVQcmVkaWN0aW9uLFxuICBnZXQ6IGdldFByZWRpY3Rpb24sXG4gIGNhbmNlbDogY2FuY2VsUHJlZGljdGlvbixcbiAgbGlzdDogbGlzdFByZWRpY3Rpb25zLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/replicate/lib/predictions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/replicate/lib/trainings.js":
/*!*************************************************!*\
  !*** ./node_modules/replicate/lib/trainings.js ***!
  \*************************************************/
/***/ ((module) => {

eval("/**\n * Create a new training\n *\n * @param {string} model_owner - Required. The username of the user or organization who owns the model\n * @param {string} model_name - Required. The name of the model\n * @param {string} version_id - Required. The version ID\n * @param {object} options\n * @param {string} options.destination - Required. The destination for the trained version in the form \"{username}/{model_name}\"\n * @param {object} options.input - Required. An object with the model inputs\n * @param {string} [options.webhook] - An HTTPS URL for receiving a webhook when the training updates\n * @param {string[]} [options.webhook_events_filter] - You can change which events trigger webhook requests by specifying webhook events (`start`|`output`|`logs`|`completed`)\n * @returns {Promise<object>} Resolves with the data for the created training\n */\nasync function createTraining(model_owner, model_name, version_id, options) {\n  const { ...data } = options;\n\n  if (data.webhook) {\n    try {\n      // eslint-disable-next-line no-new\n      new URL(data.webhook);\n    } catch (err) {\n      throw new Error('Invalid webhook URL');\n    }\n  }\n\n  const response = await this.request(`/models/${model_owner}/${model_name}/versions/${version_id}/trainings`, {\n    method: 'POST',\n    data,\n  });\n\n  return response.json();\n}\n\n/**\n * Fetch a training by ID\n *\n * @param {string} training_id - Required. The training ID\n * @returns {Promise<object>} Resolves with the data for the training\n */\nasync function getTraining(training_id) {\n  const response = await this.request(`/trainings/${training_id}`, {\n    method: 'GET',\n  });\n\n  return response.json();\n}\n\n/**\n * Cancel a training by ID\n *\n * @param {string} training_id - Required. The training ID\n * @returns {Promise<object>} Resolves with the data for the training\n */\nasync function cancelTraining(training_id) {\n  const response = await this.request(`/trainings/${training_id}/cancel`, {\n    method: 'POST',\n  });\n\n  return response.json();\n}\n\n/**\n * List all trainings\n *\n * @returns {Promise<object>} - Resolves with a page of trainings\n */\nasync function listTrainings() {\n  const response = await this.request('/trainings', {\n    method: 'GET',\n  });\n\n  return response.json();\n}\n\nmodule.exports = {\n  create: createTraining,\n  get: getTraining,\n  cancel: cancelTraining,\n  list: listTrainings,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVwbGljYXRlL2xpYi90cmFpbmluZ3MuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUSxzRkFBc0YsU0FBUyxFQUFFLFdBQVc7QUFDL0gsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBLFVBQVUsVUFBVTs7QUFFcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBLGlEQUFpRCxZQUFZLEdBQUcsV0FBVyxZQUFZLFdBQVc7QUFDbEc7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBLG9EQUFvRCxZQUFZO0FBQ2hFO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixhQUFhLGlCQUFpQjtBQUM5QjtBQUNBO0FBQ0Esb0RBQW9ELFlBQVk7QUFDaEU7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYSxpQkFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYWktY29tcGFuaW9uLy4vbm9kZV9tb2R1bGVzL3JlcGxpY2F0ZS9saWIvdHJhaW5pbmdzLmpzP2JhMmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGUgYSBuZXcgdHJhaW5pbmdcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gbW9kZWxfb3duZXIgLSBSZXF1aXJlZC4gVGhlIHVzZXJuYW1lIG9mIHRoZSB1c2VyIG9yIG9yZ2FuaXphdGlvbiB3aG8gb3ducyB0aGUgbW9kZWxcbiAqIEBwYXJhbSB7c3RyaW5nfSBtb2RlbF9uYW1lIC0gUmVxdWlyZWQuIFRoZSBuYW1lIG9mIHRoZSBtb2RlbFxuICogQHBhcmFtIHtzdHJpbmd9IHZlcnNpb25faWQgLSBSZXF1aXJlZC4gVGhlIHZlcnNpb24gSURcbiAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge3N0cmluZ30gb3B0aW9ucy5kZXN0aW5hdGlvbiAtIFJlcXVpcmVkLiBUaGUgZGVzdGluYXRpb24gZm9yIHRoZSB0cmFpbmVkIHZlcnNpb24gaW4gdGhlIGZvcm0gXCJ7dXNlcm5hbWV9L3ttb2RlbF9uYW1lfVwiXG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9ucy5pbnB1dCAtIFJlcXVpcmVkLiBBbiBvYmplY3Qgd2l0aCB0aGUgbW9kZWwgaW5wdXRzXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMud2ViaG9va10gLSBBbiBIVFRQUyBVUkwgZm9yIHJlY2VpdmluZyBhIHdlYmhvb2sgd2hlbiB0aGUgdHJhaW5pbmcgdXBkYXRlc1xuICogQHBhcmFtIHtzdHJpbmdbXX0gW29wdGlvbnMud2ViaG9va19ldmVudHNfZmlsdGVyXSAtIFlvdSBjYW4gY2hhbmdlIHdoaWNoIGV2ZW50cyB0cmlnZ2VyIHdlYmhvb2sgcmVxdWVzdHMgYnkgc3BlY2lmeWluZyB3ZWJob29rIGV2ZW50cyAoYHN0YXJ0YHxgb3V0cHV0YHxgbG9nc2B8YGNvbXBsZXRlZGApXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxvYmplY3Q+fSBSZXNvbHZlcyB3aXRoIHRoZSBkYXRhIGZvciB0aGUgY3JlYXRlZCB0cmFpbmluZ1xuICovXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVUcmFpbmluZyhtb2RlbF9vd25lciwgbW9kZWxfbmFtZSwgdmVyc2lvbl9pZCwgb3B0aW9ucykge1xuICBjb25zdCB7IC4uLmRhdGEgfSA9IG9wdGlvbnM7XG5cbiAgaWYgKGRhdGEud2ViaG9vaykge1xuICAgIHRyeSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3XG4gICAgICBuZXcgVVJMKGRhdGEud2ViaG9vayk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgd2ViaG9vayBVUkwnKTtcbiAgICB9XG4gIH1cblxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMucmVxdWVzdChgL21vZGVscy8ke21vZGVsX293bmVyfS8ke21vZGVsX25hbWV9L3ZlcnNpb25zLyR7dmVyc2lvbl9pZH0vdHJhaW5pbmdzYCwge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGRhdGEsXG4gIH0pO1xuXG4gIHJldHVybiByZXNwb25zZS5qc29uKCk7XG59XG5cbi8qKlxuICogRmV0Y2ggYSB0cmFpbmluZyBieSBJRFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB0cmFpbmluZ19pZCAtIFJlcXVpcmVkLiBUaGUgdHJhaW5pbmcgSURcbiAqIEByZXR1cm5zIHtQcm9taXNlPG9iamVjdD59IFJlc29sdmVzIHdpdGggdGhlIGRhdGEgZm9yIHRoZSB0cmFpbmluZ1xuICovXG5hc3luYyBmdW5jdGlvbiBnZXRUcmFpbmluZyh0cmFpbmluZ19pZCkge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMucmVxdWVzdChgL3RyYWluaW5ncy8ke3RyYWluaW5nX2lkfWAsIHtcbiAgICBtZXRob2Q6ICdHRVQnLFxuICB9KTtcblxuICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xufVxuXG4vKipcbiAqIENhbmNlbCBhIHRyYWluaW5nIGJ5IElEXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHRyYWluaW5nX2lkIC0gUmVxdWlyZWQuIFRoZSB0cmFpbmluZyBJRFxuICogQHJldHVybnMge1Byb21pc2U8b2JqZWN0Pn0gUmVzb2x2ZXMgd2l0aCB0aGUgZGF0YSBmb3IgdGhlIHRyYWluaW5nXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGNhbmNlbFRyYWluaW5nKHRyYWluaW5nX2lkKSB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5yZXF1ZXN0KGAvdHJhaW5pbmdzLyR7dHJhaW5pbmdfaWR9L2NhbmNlbGAsIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgfSk7XG5cbiAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbn1cblxuLyoqXG4gKiBMaXN0IGFsbCB0cmFpbmluZ3NcbiAqXG4gKiBAcmV0dXJucyB7UHJvbWlzZTxvYmplY3Q+fSAtIFJlc29sdmVzIHdpdGggYSBwYWdlIG9mIHRyYWluaW5nc1xuICovXG5hc3luYyBmdW5jdGlvbiBsaXN0VHJhaW5pbmdzKCkge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMucmVxdWVzdCgnL3RyYWluaW5ncycsIHtcbiAgICBtZXRob2Q6ICdHRVQnLFxuICB9KTtcblxuICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgY3JlYXRlOiBjcmVhdGVUcmFpbmluZyxcbiAgZ2V0OiBnZXRUcmFpbmluZyxcbiAgY2FuY2VsOiBjYW5jZWxUcmFpbmluZyxcbiAgbGlzdDogbGlzdFRyYWluaW5ncyxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/replicate/lib/trainings.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/replicate/lib/util.js":
/*!********************************************!*\
  !*** ./node_modules/replicate/lib/util.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const ApiError = __webpack_require__(/*! ./error */ \"(rsc)/./node_modules/replicate/lib/error.js\");\n\n/**\n * Automatically retry a request if it fails with an appropriate status code.\n *\n * A GET request is retried if it fails with a 429 or 5xx status code.\n * A non-GET request is retried only if it fails with a 429 status code.\n *\n * If the response sets a Retry-After header,\n * the request is retried after the number of seconds specified in the header.\n * Otherwise, the request is retried after the specified interval,\n * with exponential backoff and jitter.\n *\n * @param {Function} request - A function that returns a Promise that resolves with a Response object\n * @param {object} options\n * @param {Function} [options.shouldRetry] - A function that returns true if the request should be retried\n * @param {number} [options.maxRetries] - Maximum number of retries. Defaults to 5\n * @param {number} [options.interval] - Interval between retries in milliseconds. Defaults to 500\n * @returns {Promise<Response>} - Resolves with the response object\n * @throws {ApiError} If the request failed\n */\nasync function withAutomaticRetries(request, options = {}) {\n  const shouldRetry = options.shouldRetry || (() => (false));\n  const maxRetries = options.maxRetries || 5;\n  const interval = options.interval || 500;\n  const jitter = options.jitter || 100;\n\n  // eslint-disable-next-line no-promise-executor-return\n  const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n  let attempts = 0;\n  do {\n    let delay = (interval * (2 ** attempts)) + (Math.random() * jitter);\n\n    /* eslint-disable no-await-in-loop */\n    try {\n      const response = await request();\n      if (response.ok || !shouldRetry(response)) {\n        return response;\n      }\n    } catch (error) {\n      if (error instanceof ApiError) {\n        const retryAfter = error.response.headers.get('Retry-After');\n        if (retryAfter) {\n          if (!Number.isInteger(retryAfter)) { // Retry-After is a date\n            const date = new Date(retryAfter);\n            if (!Number.isNaN(date.getTime())) {\n              delay = date.getTime() - new Date().getTime();\n            }\n          } else { // Retry-After is a number of seconds\n            delay = retryAfter * 1000;\n          }\n        }\n      }\n    }\n\n    if (Number.isInteger(maxRetries) && maxRetries > 0) {\n      if (Number.isInteger(delay) && delay > 0) {\n        await sleep(interval * 2 ** (options.maxRetries - maxRetries));\n      }\n      attempts += 1;\n    }\n    /* eslint-enable no-await-in-loop */\n  } while (attempts < maxRetries);\n\n  return request();\n}\n\nmodule.exports = { withAutomaticRetries };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVwbGljYXRlL2xpYi91dGlsLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLDREQUFTOztBQUVsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxVQUFVO0FBQ3JCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFVBQVU7QUFDckIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLG1CQUFtQjtBQUNoQyxZQUFZLFVBQVU7QUFDdEI7QUFDQSx5REFBeUQ7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLCtDQUErQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTs7QUFFSjtBQUNBOztBQUVBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2FpLWNvbXBhbmlvbi8uL25vZGVfbW9kdWxlcy9yZXBsaWNhdGUvbGliL3V0aWwuanM/OWFhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBcGlFcnJvciA9IHJlcXVpcmUoJy4vZXJyb3InKTtcblxuLyoqXG4gKiBBdXRvbWF0aWNhbGx5IHJldHJ5IGEgcmVxdWVzdCBpZiBpdCBmYWlscyB3aXRoIGFuIGFwcHJvcHJpYXRlIHN0YXR1cyBjb2RlLlxuICpcbiAqIEEgR0VUIHJlcXVlc3QgaXMgcmV0cmllZCBpZiBpdCBmYWlscyB3aXRoIGEgNDI5IG9yIDV4eCBzdGF0dXMgY29kZS5cbiAqIEEgbm9uLUdFVCByZXF1ZXN0IGlzIHJldHJpZWQgb25seSBpZiBpdCBmYWlscyB3aXRoIGEgNDI5IHN0YXR1cyBjb2RlLlxuICpcbiAqIElmIHRoZSByZXNwb25zZSBzZXRzIGEgUmV0cnktQWZ0ZXIgaGVhZGVyLFxuICogdGhlIHJlcXVlc3QgaXMgcmV0cmllZCBhZnRlciB0aGUgbnVtYmVyIG9mIHNlY29uZHMgc3BlY2lmaWVkIGluIHRoZSBoZWFkZXIuXG4gKiBPdGhlcndpc2UsIHRoZSByZXF1ZXN0IGlzIHJldHJpZWQgYWZ0ZXIgdGhlIHNwZWNpZmllZCBpbnRlcnZhbCxcbiAqIHdpdGggZXhwb25lbnRpYWwgYmFja29mZiBhbmQgaml0dGVyLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlcXVlc3QgLSBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIGEgUmVzcG9uc2Ugb2JqZWN0XG4gKiBAcGFyYW0ge29iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuc2hvdWxkUmV0cnldIC0gQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdHJ1ZSBpZiB0aGUgcmVxdWVzdCBzaG91bGQgYmUgcmV0cmllZFxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLm1heFJldHJpZXNdIC0gTWF4aW11bSBudW1iZXIgb2YgcmV0cmllcy4gRGVmYXVsdHMgdG8gNVxuICogQHBhcmFtIHtudW1iZXJ9IFtvcHRpb25zLmludGVydmFsXSAtIEludGVydmFsIGJldHdlZW4gcmV0cmllcyBpbiBtaWxsaXNlY29uZHMuIERlZmF1bHRzIHRvIDUwMFxuICogQHJldHVybnMge1Byb21pc2U8UmVzcG9uc2U+fSAtIFJlc29sdmVzIHdpdGggdGhlIHJlc3BvbnNlIG9iamVjdFxuICogQHRocm93cyB7QXBpRXJyb3J9IElmIHRoZSByZXF1ZXN0IGZhaWxlZFxuICovXG5hc3luYyBmdW5jdGlvbiB3aXRoQXV0b21hdGljUmV0cmllcyhyZXF1ZXN0LCBvcHRpb25zID0ge30pIHtcbiAgY29uc3Qgc2hvdWxkUmV0cnkgPSBvcHRpb25zLnNob3VsZFJldHJ5IHx8ICgoKSA9PiAoZmFsc2UpKTtcbiAgY29uc3QgbWF4UmV0cmllcyA9IG9wdGlvbnMubWF4UmV0cmllcyB8fCA1O1xuICBjb25zdCBpbnRlcnZhbCA9IG9wdGlvbnMuaW50ZXJ2YWwgfHwgNTAwO1xuICBjb25zdCBqaXR0ZXIgPSBvcHRpb25zLmppdHRlciB8fCAxMDA7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb21pc2UtZXhlY3V0b3ItcmV0dXJuXG4gIGNvbnN0IHNsZWVwID0gKG1zKSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCBtcykpO1xuXG4gIGxldCBhdHRlbXB0cyA9IDA7XG4gIGRvIHtcbiAgICBsZXQgZGVsYXkgPSAoaW50ZXJ2YWwgKiAoMiAqKiBhdHRlbXB0cykpICsgKE1hdGgucmFuZG9tKCkgKiBqaXR0ZXIpO1xuXG4gICAgLyogZXNsaW50LWRpc2FibGUgbm8tYXdhaXQtaW4tbG9vcCAqL1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHJlcXVlc3QoKTtcbiAgICAgIGlmIChyZXNwb25zZS5vayB8fCAhc2hvdWxkUmV0cnkocmVzcG9uc2UpKSB7XG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgQXBpRXJyb3IpIHtcbiAgICAgICAgY29uc3QgcmV0cnlBZnRlciA9IGVycm9yLnJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdSZXRyeS1BZnRlcicpO1xuICAgICAgICBpZiAocmV0cnlBZnRlcikge1xuICAgICAgICAgIGlmICghTnVtYmVyLmlzSW50ZWdlcihyZXRyeUFmdGVyKSkgeyAvLyBSZXRyeS1BZnRlciBpcyBhIGRhdGVcbiAgICAgICAgICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZShyZXRyeUFmdGVyKTtcbiAgICAgICAgICAgIGlmICghTnVtYmVyLmlzTmFOKGRhdGUuZ2V0VGltZSgpKSkge1xuICAgICAgICAgICAgICBkZWxheSA9IGRhdGUuZ2V0VGltZSgpIC0gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHsgLy8gUmV0cnktQWZ0ZXIgaXMgYSBudW1iZXIgb2Ygc2Vjb25kc1xuICAgICAgICAgICAgZGVsYXkgPSByZXRyeUFmdGVyICogMTAwMDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoTnVtYmVyLmlzSW50ZWdlcihtYXhSZXRyaWVzKSAmJiBtYXhSZXRyaWVzID4gMCkge1xuICAgICAgaWYgKE51bWJlci5pc0ludGVnZXIoZGVsYXkpICYmIGRlbGF5ID4gMCkge1xuICAgICAgICBhd2FpdCBzbGVlcChpbnRlcnZhbCAqIDIgKiogKG9wdGlvbnMubWF4UmV0cmllcyAtIG1heFJldHJpZXMpKTtcbiAgICAgIH1cbiAgICAgIGF0dGVtcHRzICs9IDE7XG4gICAgfVxuICAgIC8qIGVzbGludC1lbmFibGUgbm8tYXdhaXQtaW4tbG9vcCAqL1xuICB9IHdoaWxlIChhdHRlbXB0cyA8IG1heFJldHJpZXMpO1xuXG4gIHJldHVybiByZXF1ZXN0KCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0geyB3aXRoQXV0b21hdGljUmV0cmllcyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/replicate/lib/util.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/replicate/package.json":
/*!*********************************************!*\
  !*** ./node_modules/replicate/package.json ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"name":"replicate","version":"0.18.1","description":"JavaScript client for Replicate","repository":"github:replicate/replicate-javascript","homepage":"https://github.com/replicate/replicate-javascript#readme","bugs":"https://github.com/replicate/replicate-javascript/issues","license":"Apache-2.0","main":"index.js","engines":{"node":">=18.0.0","npm":">=7.19.0","git":">=2.11.0","yarn":">=1.7.0"},"scripts":{"check":"tsc","lint":"eslint .","test":"jest"},"devDependencies":{"@types/jest":"^29.5.3","@typescript-eslint/eslint-plugin":"^5.56.0","cross-fetch":"^3.1.5","eslint":"^8.36.0","eslint-config-airbnb-base":"^15.0.0","eslint-plugin-import":"^2.27.5","eslint-plugin-jest":"^27.2.1","eslint-plugin-jsdoc":"^46.2.6","eslint-plugin-n":"^15.6.1","eslint-plugin-promise":"^6.1.1","jest":"^29.6.2","nock":"^13.3.0","ts-jest":"^29.1.0","typescript":"^5.0.2"}}');

/***/ })

};
;