generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "postgresql"
  url          = env("prisma://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiNTlkMTBmOWEtMmQyMi00ZmY3LTk4MmUtZjBjM2RmMDExMGU2IiwidGVuYW50X2lkIjoiZDRiOWUzZmNmYjdiNTJlMWNlZDljMmZhMTRkNzkyMjZhMGI5ZTc2NzhkYTRiM2MzYjNlMDUwMWQ1ZmYwNDI4NyIsImludGVybmFsX3NlY3JldCI6ImI5MDQ0ZmY4LTM0OWQtNGM4YS04N2FkLTQwMThhMWMyMjczMCJ9.nN6CmcOkjSQQNpp34lFLbTL5ZoPnlGXgJPkHavpYj18")
  directUrl    = env("DIRECT_URL")
  relationMode = "prisma"
}

model Category {
  id         String      @id @default(uuid())
  name       String
  companions Companion[]
}

model Companion {
  id           String @id @default(uuid())
  userId       String
  userName     String
  src          String
  name         String @db.Text
  description  String
  instructions String @db.Text
  seed         String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  messages Message[]

  @@index([categoryId])
  @@index([name])
}

enum Role {
  user
  system
}

model Message {
  id        String   @id @default(uuid())
  role      Role
  content   String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  companionId String
  userId      String

  companion Companion @relation(fields: [companionId], references: [id], onDelete: Cascade)

  @@index([companionId])
}
